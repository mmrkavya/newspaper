version: '3'
services:
      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - "2181:2181"
      
      kafka:
        image: wurstmeister/kafka
        ports:
          - "9092:9092"
        environment:
          KAFKA_ADVERTISED_HOST_NAME: kafka
          KAFKA_CREATE_TOPICS: "newspaper:1:1"
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        depends_on: 
          - zookeeper

      spark-master:
        image: bde2020/spark-master:3.1.1-hadoop3.2
        ports:
          - "8080:8080"
          - "7077:7077"
        environment:
          - INIT_DAEMON_STEP=setup_spark
      
      spark-worker:
        image: bde2020/spark-worker:3.1.1-hadoop3.2
        depends_on:
          - spark-master
        ports:
          - "8081:8081"
        environment:
          - "SPARK_MASTER=spark://spark-master:7077"


      producer:
        build: ./producer/
        environment: 
          KAFKA_BROKER: kafka:9092
          TOPIC: newsfeed
        command: sh -c "python KafkaProducer.py"
        depends_on: 
          - spark-master
          - kafka
      
      producer-rssfeed:
        build: ./producer-rssfeed/
        environment: 
          KAFKA_BROKER: kafka:9092
          TOPIC: newsfeed
        command: sh -c "python RSSFeedProducer.py"
        depends_on: 
          - spark-master
          - kafka
          

      
      consumer:
        build: ./consumer/
        environment: 
          KAFKA_BROKER: kafka:9092
          TOPIC: newsfeed
        command: "python KafkaConsumer.py"
        depends_on:
          - spark-master
          - kafka
          
                
      predict:
        deploy:
          replicas: 1
        build: ./predict/
        command: "python main.py "
        ports:
          - "5000:5000"
        volumes:
          - ./model:/app/model

       
      webapp:
        deploy:
          replicas: 1
        build: webapp
        container_name: webapp_container
        ports:
          - "11030:11030"
        depends_on:
         - predict
      trainer:
        deploy:
          replicas: 1
        build: ./trainer/
        container_name: trainer
        command: "spark-submit --master spark://spark-master:7077 --packages org.mongodb.spark:mongo-spark-connector_2.12:3.0.1 --jars spark-nlp_2.12-3.3.0.jar main.py "
        ports:
          - "7777:7777"
        depends_on:
          - spark-master

      



      
      
  